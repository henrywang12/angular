关于分页：
  1) 分页分为服务器端分页和客户端分页；
  2）服务器端分页：
     - 分页计算在服务器端进行；
     - 客户端每次请求服务器时，传递一个要请求显示的页码数； p=2
     - 服务器端分页，比较适合数据量比较大的情况；
  3）客户端分页：
     - 分页计算是在客户端进行的；
     - 服务器端要一次性地将所有的数据发到客户端；
     - 客户端分页，比较适合数据量比较小的情况；
  4）计算要显示的那一页的数据的过程，称为“分页算法”


考虑分页过滤器在很多地方都要使用，所以我们将它定义在一个单独的模块中。

4、代码实现：
   4.1 新创建一个filters/customFilters.js文件，在该文件中，新建一个模块，其中注册一个分页过滤器。代码实现：
        /**
         * 一个专门的模块，在其中定义一些通用的过滤器
         */
        // 创建模块
        angular.module("customFilters",[]);

        // 向模块中注册一个分页过滤器
        angular.module("customFilter").filter("range",function(){
            return function (data, page, size) { // 商品数组  页码(1)  3
                // 先判断传入的参数的数据类型是否正确
                if (angular.isArray(data) && angular.isNumber(page) && angular.isNumber(size)) {
                    // 计算起始索引
                    var start_index = (page - 1) * size;

                    // 如果数组的长度小于我们计算出来的起始位置
                    if (start_index >= data.length) {
                        return [];
                    } else {
                        // splice是从data中删除start_index位置处开始的size个元素，并返回这些被删除的数据
                        return data.splice(start_index, size);
                    }
                } else {
                    return data;
                }
            }
        });

   4.2 设置分页参数：ontrollers/productList.js文件中
        angular.module("SportsStore")
            .constant("productListPageCount", 3)    // 默认页面大小(每页显示的商品数量)
            .controller("categoryListController", function ($scope,productListPageCount) {
                var selectedCategory = null;    // 存储选择中的商品类别名称  Category #1

                $scope.selectedPage = 1;       // 保存用户选的页码。默认是第1页
                $scope.pageSize = productListPageCount; // 每一页中显示商品的数量

                //......

   4.3 将过滤器和分页参数应用到view中(index.html):
    <div class="col-xs-8">
        <!--产品信息放这里-->
        <div class="well" ng-repeat="product in data.products | filter:categoryFilter | range:selectedPage:pageSize">

   4.4 在主模块中添加对customFilterModule模块的依赖：
       var myapp = angular.module("SportStore",["customFilters"]);

   4.5 引入filters/customFilter.js文件：
       <script src="filters/customFilters.js"></script>